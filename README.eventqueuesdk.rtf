{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf400
{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;\f1\fnil\fcharset0 Menlo-Regular;\f2\fnil\fcharset0 Menlo-Bold;
\f3\fnil\fcharset0 Menlo-Italic;\f4\fnil\fcharset0 HelveticaNeue-Bold;}
{\colortbl;\red255\green255\blue255;\red18\green31\blue60;\red255\green255\blue255;\red63\green76\blue102;
\red241\green242\blue245;\red249\green250\blue251;\red4\green57\blue192;\red93\green93\blue93;\red135\green135\blue135;
\red53\green65\blue117;\red133\green0\blue2;\red14\green110\blue109;\red172\green117\blue53;\red135\green136\blue117;
\red17\green137\blue135;}
{\*\expandedcolortbl;;\cssrgb\c9020\c16863\c30196;\cssrgb\c100000\c100000\c100000;\cssrgb\c31373\c37255\c47451;
\cssrgb\c95686\c96078\c96863;\cssrgb\c98039\c98431\c98824;\cssrgb\c0\c32157\c80000;\cssrgb\c43922\c43922\c43922;\cssrgb\c60000\c60000\c60000;
\cssrgb\c26667\c33333\c53333;\cssrgb\c60000\c0\c0;\cssrgb\c0\c50196\c50196;\cssrgb\c73333\c53333\c26667;\cssrgb\c60000\c60000\c53333;
\cssrgb\c0\c60000\c60000;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid102\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid3}
{\list\listtemplateid4\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid301\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid4}
{\list\listtemplateid5\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid401\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid5}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}{\listoverride\listid4\listoverridecount0\ls4}{\listoverride\listid5\listoverridecount0\ls5}}
\margl1440\margr1440\vieww20060\viewh13280\viewkind0
\deftab720
\pard\pardeftab720\sl560\partightenfactor0

\f0\fs48 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Overview\cb1 \

\itap1\trowd \taflags4 \trgaph108\trleft-108 \taminh8000 \trbrdrt\brdrnil \trbrdrl\brdrnil \trbrdrt\brdrnil \trbrdrr\brdrnil 
\clvertalt \clshdrawnil \clwWidth21890\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt400 \clpadl400 \clpadb1200 \clpadr400 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\partightenfactor0

\fs28 \cf4 \cb5 \strokec4 Clone in Sourcetree\cf2 \cb3 \strokec2 \'a0\
\pard\intbl\itap1\pardeftab720\sl440\qc\partightenfactor0
\cf4 \cb5 \strokec4 SSH\
\pard\intbl\itap1\pardeftab720\sl400\partightenfactor0
\cf2 \cb6 \strokec2 https://smaretick@bitbucket.org/eqios/eventqueuesdk.git\
\pard\intbl\itap1\pardeftab720\sl340\qr\partightenfactor0
\cf4 \cb3 \strokec4 Last updated\cb1 \
\cb3 Language\cb1 \
\cb3 Access level\cb1 \
\pard\intbl\itap1\pardeftab720\sl340\partightenfactor0
\cf2 \cb3 \strokec2 2016-11-24\cb1 \
\cb3 Objective-C\cb1 \
\cb3 Read\cb1 \
\pard\intbl\itap1\pardeftab720\sl340\qc\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://bitbucket.org/eqios/eventqueuesdk#forks"}}{\fldrslt \cf4 \strokec4 \
}}\pard\intbl\itap1\pardeftab720\sl560\partightenfactor0

\fs48 \cf2 \cb3 EQSDK for iOS\cb1 \
\pard\intbl\itap1\pardeftab720\sl340\partightenfactor0

\fs28 \cf2 \cb3 The EventQueue SDK (EQSDK) allows a developer to easily integrate real-time notifications with acknowledgements, customized alert popups, and other real-time and communication and security focused features into their existing application. The EQSDK provides the communication necessary to interact with the EventQueue Platform's REST API, as well as a default UI. The EQSDK Framework will automatically handle received notifications and displaying the appropriate popups.\cb1 \
\pard\intbl\itap1\pardeftab720\sl460\partightenfactor0

\fs40 \cf2 \cb3 SDK Overview\cb1 \
\pard\intbl\itap1\pardeftab720\sl340\partightenfactor0

\fs28 \cf2 \cb3 The SDK is designed to have several singleton classes. You do not have to allocate or initialize any class objects. During your application initialization, obtain the\'a0
\f1\fs24 \cb5 sharedInstance
\f0\fs28 \cb3 \'a0for the\'a0
\f1\fs24 \cb5 EQService
\f0\fs28 \cb3 \'a0singleton. Set the properties\'a0
\f1\fs24 \cb5 apiKey
\f0\fs28 \cb3 \'a0and\'a0
\f1\fs24 \cb5 apiSecret
\f0\fs28 \cb3 . Next obtain the\'a0
\f1\fs24 \cb5 sharedInstance
\f0\fs28 \cb3 \'a0for\'a0
\f1\fs24 \cb5 EQNotificationService
\f0\fs28 \cb3 \'a0and call the\'a0
\f1\fs24 \cb5 start
\f0\fs28 \cb3 . All of the calls to the backend web service are completely handled for you. The goal is blissful integration into your application. Drag and drop the\'a0
\f1\fs24 \cb5 EQSDK.framework
\f0\fs28 \cb3 \'a0file, add it as an embedded binary, and add 3 keys to your\'a0
\f1\fs24 \cb5 Info.plist
\f0\fs28 \cb3 \'a0file. Thats it!\cb1 \
\pard\intbl\itap1\pardeftab720\sl460\partightenfactor0

\fs40 \cf2 \cb3 Terminology\cb1 \
\pard\intbl\itap1\pardeftab720\sl340\partightenfactor0

\i\fs28 \cf2 \cb3 Notification
\i0 : a message\cb1 \

\i \cb3 Alert
\i0 : a dialog, popup or other mechanism to bring attention to a notification\cb1 \
\pard\intbl\itap1\pardeftab720\sl460\partightenfactor0

\fs40 \cf2 \cb3 Getting Started\cb1 \
\pard\intbl\itap1\pardeftab720\sl340\partightenfactor0

\fs28 \cf2 \cb3 Request the API key via email:\'a0{\field{\*\fldinst{HYPERLINK "mailto://info@eventqplatform.com"}}{\fldrslt \cf7 \strokec7 info@eventqplatform.com}}\cb1 \
\cb3 Download the SDK framework:\'a0{\field{\*\fldinst{HYPERLINK "http://www.eventqplatform.com/sdk/EQSDK-ios.zip"}}{\fldrslt \cf7 \strokec7 http://www.eventqplatform.com/sdk/EQSDK-ios.zip}}\cb1 \
\pard\intbl\itap1\pardeftab720\sl400\partightenfactor0

\b\fs32 \cf2 \cb3 Minimum Requirements\cb1 \
\pard\intbl\itap1\tx220\tx720\pardeftab720\li720\fi-720\sl340\partightenfactor0
\ls1\ilvl0
\b0\fs28 \cf2 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 iOS 8.0 and later\cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 iPhone 4s and later\cb1 \
\pard\intbl\itap1\pardeftab720\sl400\partightenfactor0

\b\fs32 \cf2 \cb3 --Coming Soon--\cb1 \
\pard\intbl\itap1\pardeftab720\sl340\partightenfactor0

\b0\fs28 \cf2 \cb3 How to create &| provide the certificates that match your Xcode bundle id.\cb1 \
\pard\intbl\itap1\pardeftab720\sl400\partightenfactor0

\b\fs32 \cf2 \cb3 Setup Your Xcode Project\cb1 \
\pard\intbl\itap1\pardeftab720\sl340\partightenfactor0

\b0\fs28 \cf2 \cb3 Drag the\'a0
\f1\fs24 \cb5 EQSDK.framework
\f0\fs28 \cb3 \'a0file int your Xcode Project Select your App's project file On the\'a0
\f1\fs24 \cb5 General Tab
\f0\fs28 \cb3 ,\'a0
\f1\fs24 \cb5 Add Embedded Library
\f0\fs28 \cb3 , and select\'a0
\f1\fs24 \cb5 EQSDK
\f0\fs28 \cb1 \
\cb3 Add the following entries to your\'a0
\f1\fs24 \cb5 Info.plist
\f0\fs28 \cb3 \'a0file:\cb1 \
\pard\intbl\itap1\tx220\tx720\pardeftab720\li720\fi-720\sl340\partightenfactor0
\ls2\ilvl0\cf8 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec8 Required background modes (Array)\
\pard\intbl\itap1\tx940\tx1440\pardeftab720\li1440\fi-1440\sl340\partightenfactor0
\ls2\ilvl1\cf8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec8 App registers for location updates (String)\cb1 \
\ls2\ilvl1\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec8 App downloads content in response to push notifications (String)\cb1 \
\pard\intbl\itap1\tx220\tx720\pardeftab720\li720\fi-720\sl340\partightenfactor0
\ls2\ilvl0\cf8 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec8 App Transport Security Settings (Dictionary)\
\pard\intbl\itap1\tx940\tx1440\pardeftab720\li1440\fi-1440\sl340\partightenfactor0
\ls2\ilvl1\cf8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec8 Allow Arbitrary Loads (Boolean) YES\cb1 \
\pard\intbl\itap1\pardeftab720\sl340\partightenfactor0
\cf2 \cb3 \strokec2 Now you are ready to add EQSDK code to your project.\cb1 \
\pard\intbl\itap1\pardeftab720\sl400\partightenfactor0

\b\fs32 \cf2 \cb3 Sample Code\cb1 \
\pard\intbl\itap1\pardeftab720\sl340\partightenfactor0

\b0\fs28 \cf2 \cb3 Your AppDelegate should subclass\'a0
\f1\fs24 \cb5 EQNotificationService
\f0\fs28 \cb1 \
\cb3 Your\'a0
\f1\fs24 \cb5 AppDelegate.h
\f0\fs28 \cb3 :\cb1 \
\pard\intbl\itap1\pardeftab720\sl320\partightenfactor0

\f2\b\fs24 \cf9 \cb5 \strokec9 #import <UIKit/UIKit.h>
\f1\b0 \cf2 \strokec2 \

\f2\b \cf9 \strokec9 #import <EQSDK/EQSDK.h>
\f1\b0 \cf2 \strokec2 \
\
\pard\intbl\itap1\pardeftab720\sl320\partightenfactor0

\f2\b \cf2 @interface
\f1\b0  
\f2\b \cf10 \strokec10 AppDelegate
\f1\b0 \cf2 \strokec2  : 
\f2\b \cf10 \strokec10 EQNotificationService
\f1\b0 \cf2 \strokec2  
\f2\b <
\f1\b0 \cf9 \strokec9 UIApplicationDelegate
\f2\b \cf2 \strokec2 >
\f1\b0 \
  ...\
\pard\intbl\itap1\pardeftab720\sl340\partightenfactor0

\f0\fs28 \cf2 \cb3 Your\'a0
\f1\fs24 \cb5 AppDelegate.m
\f0\fs28 \cb3 :\cb1 \
\pard\intbl\itap1\pardeftab720\sl320\partightenfactor0

\f2\b\fs24 \cf9 \cb5 \strokec9 #import "AppDelegate.h"
\f1\b0 \cf2 \strokec2 \

\f2\b \cf9 \strokec9 #import <EQSDK/EQSDK.h>
\f1\b0 \cf2 \strokec2 \
\
\pard\intbl\itap1\pardeftab720\sl320\partightenfactor0

\f2\b \cf2 @implementation
\f1\b0  
\f2\b \cf10 \strokec10 AppDelegate
\f1\b0 \cf2 \strokec2 \
\
- (
\f2\b \cf10 \strokec10 BOOL
\f1\b0 \cf2 \strokec2 )
\f2\b \cf11 \strokec11 application:
\f1\b0 \cf2 \strokec2 (\cf9 \strokec9 UIApplication\cf2 \strokec2  
\f2\b *
\f1\b0 )\cf12 \strokec12 application\cf2 \strokec2  
\f2\b \cf11 \strokec11 didFinishLaunchingWithOptions:
\f1\b0 \cf2 \strokec2 (\cf9 \strokec9 NSDictionary\cf2 \strokec2  
\f2\b *
\f1\b0 )\cf12 \strokec12 launchOptions\cf2 \strokec2  \{\
    ...\
  EQService
\f2\b *
\f1\b0  service 
\f2\b =
\f1\b0  [EQService sharedInstance];\
  service.apiKey 
\f2\b =
\f1\b0  \cf13 \strokec13 @"123456789"\cf2 \strokec2 ;  
\f3\i \cf14 \strokec14 //provided by info@eventQplatform.com
\f1\i0 \cf2 \strokec2 \
  service.apiSecret 
\f2\b =
\f1\b0  \cf13 \strokec13 @"Secret"\cf2 \strokec2 ;  
\f3\i \cf14 \strokec14 //provided by info@eventQplatform.com
\f1\i0 \cf2 \strokec2 \
\
  [[EQNotificationService sharedInstance] start];\
    ...\
\}\
  ...\
\pard\intbl\itap1\pardeftab720\sl460\partightenfactor0

\f0\fs40 \cf2 \cb3 The Alert\cb1 \
\pard\intbl\itap1\pardeftab720\sl340\partightenfactor0

\fs28 \cf2 \cb3 When a new notification arrives, the EQ SDK will handle the processing and if necessary, will display an alert dialog via a view controller. No code beyond the basic 4 line code is required for this default behavior.\cb1 \
\pard\intbl\itap1\pardeftab720\sl400\partightenfactor0

\b\fs32 \cf2 \cb3 Customizing the Alert\cb1 \
\pard\intbl\itap1\pardeftab720\sl340\partightenfactor0

\b0\fs28 \cf2 \cb3 You may want to customize the alert to match your application's style and theme. This can be done in several ways with basic and full customization.\cb1 \
\pard\intbl\itap1\pardeftab720\sl320\partightenfactor0

\b \cf2 \cb3 Basic Alert Customization\cb1 \
\pard\intbl\itap1\pardeftab720\sl340\partightenfactor0

\b0 \cf2 \cb3 You may choose to perform some basic customization of the alert. This can easily be done using Xcode's IB (interface builder).\cb1 \
\pard\intbl\itap1\tx220\tx720\pardeftab720\li720\fi-720\sl340\partightenfactor0
\ls3\ilvl0\cf2 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Create a new View (xib), in our example, lets call it\'a0
\f1\fs24 \cb5 MyCustomEmergencyAlert
\f0\fs28 \cb1 \
\ls3\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Set the\'a0
\f1\fs24 \cb5 File's Owner
\f0\fs28 \cb3 \'a0to\'a0
\f1\fs24 \cb5 EQAlertViewController
\f0\fs28 \cb1 \
\ls3\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Select the top level\'a0
\f1\fs24 \cb5 View
\f0\fs28 \cb3 \'a0and set its Custom Class to\'a0
\f1\fs24 \cb5 EQAlertView
\f0\fs28 \cb3 \'a0in the\'a0
\f1\fs24 \cb5 Identity Inspector
\f0\fs28 \cb1 \
\ls3\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 In the\'a0
\f1\fs24 \cb5 Attributes Inspector
\f0\fs28 \cb3 , configure the icon, color and a few other parameters.\cb1 \
\ls3\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Finally, call the\'a0
\f1\fs24 \cb5 setCustomAlertViewController
\f0\fs28 \cb3 \'a0method of the\'a0
\f1\fs24 \cb5 EQNotificationService
\f0\fs28 \cb3 \'a0singleton:\cb1 \
\pard\intbl\itap1\pardeftab720\sl340\partightenfactor0
\cf2 \cb3 AppDelegate.m\cb1 \
\pard\intbl\itap1\pardeftab720\sl320\partightenfactor0

\f2\b\fs24 \cf9 \cb5 \strokec9 #import "AppDelegate.h"
\f1\b0 \cf2 \strokec2 \

\f2\b \cf9 \strokec9 #import <EQSDK/EQSDK.h>
\f1\b0 \cf2 \strokec2 \
  ...\
\pard\intbl\itap1\pardeftab720\sl320\partightenfactor0

\f2\b \cf2 -
\f1\b0  (
\f2\b \cf10 \strokec10 BOOL
\f1\b0 \cf2 \strokec2 )application:(\cf9 \strokec9 UIApplication\cf2 \strokec2  
\f2\b *
\f1\b0 )application didFinishLaunchingWithOptions:(\cf9 \strokec9 NSDictionary\cf2 \strokec2  
\f2\b *
\f1\b0 )launchOptions \{\
    ...\
  EQNotificationService 
\f2\b *
\f1\b0 notificationSvc 
\f2\b =
\f1\b0  [EQNotificationService sharedInstance];\
  EQAlertViewController 
\f2\b *
\f1\b0 vc 
\f2\b =
\f1\b0  [[EQAlertViewController alloc] initWithNibName:\cf13 \strokec13 @"MyCustomEmergencyAlert"\cf2 \strokec2  bundle:\cf9 \strokec9 nil\cf2 \strokec2 ];\
  [notificationSvc setCustomAlertViewController:vc forAlertType:\cf13 \strokec13 @"emergency"\cf2 \strokec2 ];\
    ...\
\}\
\pard\intbl\itap1\pardeftab720\sl320\partightenfactor0

\f0\b\fs28 \cf2 \cb3 Full Alert Customization\cb1 \
\pard\intbl\itap1\pardeftab720\sl340\partightenfactor0

\b0 \cf2 \cb3 If the basic alert customization does not meet your needs, you may opt for full customization. Full customization can be done using Xcode's IB (interface builder), or programmatically. Here, we'll discuss the IB method.\cb1 \
\pard\intbl\itap1\tx220\tx720\pardeftab720\li720\fi-720\sl340\partightenfactor0
\ls4\ilvl0\cf8 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec8 Add new File. iOS -> User Interface -> View\cb1 \
\pard\intbl\itap1\pardeftab720\sl340\partightenfactor0
\cf8 \cb3 This will create a new\'a0
\f1\fs24 \cb5 .xib
\f0\fs28 \cb3 . We'll reuse the example class "
\f1\fs24 \cb5 MyCustomEmergencyAlert
\f0\fs28 \cb3 " from the previous section,\'a0{\field{\*\fldinst{HYPERLINK "https://bitbucket.org/eqios/eventqueuesdk#basic-alert-customization"}}{\fldrslt \cf7 \strokec7 Basic Alert Customization}}\cb1 \
\pard\intbl\itap1\tx220\tx720\pardeftab720\li720\fi-720\sl340\partightenfactor0
\ls5\ilvl0\cf8 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec8 Set the\'a0
\f1\fs24 \cb5 File's Owner
\f0\fs28 \cb3 \'a0to\'a0
\f1\fs24 \cb5 EQAlertViewController
\f0\fs28 \cb1 \
\ls5\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec8 Create your view with the following IBOutlets:\cb1 \
\pard\intbl\itap1\tx220\tx720\pardeftab720\li720\fi-720\sl340\partightenfactor0
\ls5\ilvl0
\f4\b \cf8 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec8 actionButton
\f0\b0 \'a0(UIButton)\cb1 \
\ls5\ilvl0
\f4\b \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec8 alertIcon
\f0\b0 \'a0(UIImageView)\cb1 \
\ls5\ilvl0
\f4\b \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec8 date
\f0\b0 \'a0(UILabel)\cb1 \
\ls5\ilvl0
\f4\b \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec8 subject
\f0\b0 \'a0(UILabel)\cb1 \
\ls5\ilvl0
\f4\b \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec8 message
\f0\b0 \'a0(UILabel)\cb1 \
\pard\intbl\itap1\tx220\tx720\pardeftab720\li720\fi-720\sl340\partightenfactor0
\ls5\ilvl0\cf8 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec8 Connect the\'a0
\f1\fs24 \cb5 Received Actions
\f0\fs28 \cb3 \'a0outlets:\cb1 \
\pard\intbl\itap1\tx220\tx720\pardeftab720\li720\fi-720\sl340\partightenfactor0
\ls5\ilvl0
\f4\b \cf8 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec8 dismissAlert:
\f0\b0 \'a0Touch Up Inside\cb1 \
\ls5\ilvl0
\f4\b \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec8 performAction:
\f0\b0 \'a0Touch Up Inside\cb1 \
\pard\intbl\itap1\tx220\tx720\pardeftab720\li720\fi-720\sl340\partightenfactor0
\ls5\ilvl0\cf8 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec8 Finally, call the\'a0
\f1\fs24 \cb5 setCustomAlertViewController
\f0\fs28 \cb3 \'a0method of the\'a0
\f1\fs24 \cb5 EQNotificationService
\f0\fs28 \cb3 singleton (refer back to "Basic Alert Customization" for code sample)\cb1 \
\pard\intbl\itap1\pardeftab720\sl340\partightenfactor0
\cf2 \cb3 \strokec2 There are 3 alert types that should be customized:\cb1 \
\pard\intbl\itap1\pardeftab720\sl320\partightenfactor0

\f1\fs24 \cf2 \cb5 [notificationSvc setCustomAlertViewController:vc1 forAlertType:\cf13 \strokec13 @"emergency"\cf2 \strokec2 ];\
[notificationSvc setCustomAlertViewController:vc2 forAlertType:\cf13 \strokec13 @"information"\cf2 \strokec2 ];\
[notificationSvc setCustomAlertViewController:vc3 forAlertType:\cf13 \strokec13 @"reroute"\cf2 \strokec2 ];\
\pard\intbl\itap1\pardeftab720\sl400\partightenfactor0

\f0\b\fs32 \cf2 \cb3 EQ Alert Events\cb1 \
\pard\intbl\itap1\pardeftab720\sl340\partightenfactor0

\b0\fs28 \cf2 \cb3 You can respond to EQ Alert events by setting a delegate which implements the\'a0
\f1\fs24 \cb5 EQNotificationServiceDelegate
\f0\fs28 \cb3 :\cb1 \
\cb3 YourSubclass.h\cb1 \
\pard\intbl\itap1\pardeftab720\sl320\partightenfactor0

\f2\b\fs24 \cf2 \cb5 @interface
\f1\b0  
\f2\b \cf10 \strokec10 YourSubclass
\f1\b0 \cf2 \strokec2  : 
\f2\b \cf10 \strokec10 SomeClass
\f1\b0 \cf2 \strokec2  
\f2\b <
\f1\b0 EQNotificationServiceDelegate
\f2\b >
\f1\b0 \
  ...\

\f2\b @end
\f1\b0 \
\pard\intbl\itap1\pardeftab720\sl340\partightenfactor0

\f0\fs28 \cf2 \cb3 YourSubclass.m\cb1 \
\pard\intbl\itap1\pardeftab720\sl320\partightenfactor0

\f2\b\fs24 \cf2 \cb5 @implementation
\f1\b0  
\f2\b \cf10 \strokec10 YourSubclass
\f1\b0 \cf2 \strokec2  : 
\f2\b \cf10 \strokec10 SomeClass
\f1\b0 \cf2 \strokec2  
\f2\b <
\f1\b0 EQNotificationServiceDelegate
\f2\b >
\f1\b0 \
    ...\
  
\f2\b -
\f1\b0 (
\f2\b \cf10 \strokec10 void
\f1\b0 \cf2 \strokec2 )didReceiveNotification:(EQNotification 
\f2\b *
\f1\b0 )notification \{\
     
\f3\i \cf14 \strokec14 //your implementation here
\f1\i0 \cf2 \strokec2 \
   \}\
  
\f2\b -
\f1\b0 (
\f2\b \cf10 \strokec10 void
\f1\b0 \cf2 \strokec2 )didDismissAlert:(EQAlertViewController 
\f2\b *
\f1\b0 )dismissedViewController \{\
     
\f3\i \cf14 \strokec14 //your implementation here
\f1\i0 \cf2 \strokec2 \
   \}\
  
\f2\b -
\f1\b0 (
\f2\b \cf10 \strokec10 void
\f1\b0 \cf2 \strokec2 )didPerformAlertAction:(EQAlertViewController 
\f2\b *
\f1\b0 )dismissedViewController \{\
    
\f3\i \cf14 \strokec14 //your implementation here
\f1\i0 \cf2 \strokec2 \
  \}\
    ...\

\f2\b @end
\f1\b0 \
\pard\intbl\itap1\pardeftab720\sl340\partightenfactor0

\f0\fs28 \cf2 \cb3 AppDelegate.m\cb1 \
\pard\intbl\itap1\pardeftab720\sl320\partightenfactor0

\f1\fs24 \cf2 \cb5 - (
\f2\b \cf10 \strokec10 BOOL
\f1\b0 \cf2 \strokec2 )
\f2\b \cf11 \strokec11 application:
\f1\b0 \cf2 \strokec2 (\cf9 \strokec9 UIApplication\cf2 \strokec2  
\f2\b *
\f1\b0 )\cf12 \strokec12 application\cf2 \strokec2  
\f2\b \cf11 \strokec11 didFinishLaunchingWithOptions:
\f1\b0 \cf2 \strokec2 (\cf9 \strokec9 NSDictionary\cf2 \strokec2  
\f2\b *
\f1\b0 )\cf12 \strokec12 launchOptions\cf2 \strokec2  \{\
    ...\
  EQNotificationService 
\f2\b *
\f1\b0 notificationSvc 
\f2\b =
\f1\b0  [EQNotificationService sharedInstance];\
  notificationSvc.delegate 
\f2\b =
\f1\b0  \cf9 \strokec9 self\cf2 \strokec2 ;\
    ...\
\}\
\pard\intbl\itap1\pardeftab720\sl460\partightenfactor0

\f0\fs40 \cf2 \cb3 Notification History\cb1 \
\pard\intbl\itap1\pardeftab720\sl340\partightenfactor0

\fs28 \cf2 \cb3 The EQSDK provides a default master-detail UI for notification history. Just like the EQ Alerts, these can be customized as well to match the style and theme of your app.\cb1 \
\pard\intbl\itap1\pardeftab720\sl320\partightenfactor0

\b \cf2 \cb3 Default Notification History Navigation Controller\cb1 \
\pard\intbl\itap1\pardeftab720\sl340\partightenfactor0

\b0 \cf2 \cb3 Simply add the following line to wherever you want to bring up the default navigation controller for notification history:\cb1 \
\pard\intbl\itap1\pardeftab720\sl320\partightenfactor0

\f1\fs24 \cf2 \cb5 EQNotificationService 
\f2\b *
\f1\b0 notificationSvc 
\f2\b =
\f1\b0  [EQNotificationService sharedInstance];\
\pard\intbl\itap1\pardeftab720\sl320\partightenfactor0
\cf9 \strokec9 UIViewController\cf2 \strokec2  
\f2\b *
\f1\b0 topVC 
\f2\b =
\f1\b0  [[\cf9 \strokec9 UIApplication\cf2 \strokec2  sharedApplication] topmostViewController];  
\f3\i \cf14 \strokec14 //convenience method
\f1\i0 \cf2 \strokec2 \
[topVC presentViewController:notificationSvc.notificationHistoryNavigationController animated:\cf9 \strokec9 YES\cf2 \strokec2  completion:\cf9 \strokec9 nil\cf2 \strokec2 ];\
\pard\intbl\itap1\pardeftab720\sl340\partightenfactor0

\f0\fs28 \cf2 \cb3 Note: We've included a convenience function to get the top-most view controller for the current UIWindow so you can easily present the default notification navigation controller.\cb1 \
\pard\intbl\itap1\pardeftab720\sl460\partightenfactor0

\fs40 \cf2 \cb3 EQ Maps and Navigation\cb1 \
\pard\intbl\itap1\pardeftab720\sl340\partightenfactor0

\fs28 \cf2 \cb3 The EQNavSDK provides a simple map integration with turn by turn navigation. EQ maps and navigation have event specific data including points of interest, detailed parking info, as well as real-time traffic & special ingress and egress info.\cb1 \
\pard\intbl\itap1\pardeftab720\sl400\partightenfactor0

\b\fs32 \cf2 \cb3 Adding EQNavSDK to your project\cb1 \
\pard\intbl\itap1\pardeftab720\sl340\partightenfactor0

\b0\fs28 \cf2 \cb3 Download and unzip the SDK framework:\'a0{\field{\*\fldinst{HYPERLINK "http://www.eventqplatform.com/sdk/EQNavSDK-ios.zip"}}{\fldrslt \cf7 \strokec7 http://www.eventqplatform.com/sdk/EQNavSDK-ios.zip}}\cb1 \
\cb3 Add the prerequisite\'a0
\f1\fs24 \cb5 EQSDK.framework
\f0\fs28 \cb3 \'a0- refer back to\'a0{\field{\*\fldinst{HYPERLINK "https://bitbucket.org/eqios/eventqueuesdk#setup-your-xcode-project"}}{\fldrslt \cf7 \strokec7 Setup Your Xcode Project}}\'a0Drag the\'a0
\f1\fs24 \cb5 EQNavSDK.framework
\f0\fs28 \cb3 \'a0file int your Xcode Project Select your App's project file On the\'a0
\f1\fs24 \cb5 General Tab
\f0\fs28 \cb3 ,\'a0
\f1\fs24 \cb5 Add Embedded Library
\f0\fs28 \cb3 , and select\'a0
\f1\fs24 \cb5 EQNavSDK
\f0\fs28 \cb3 \'a0Drag the\'a0
\f1\fs24 \cb5 SKMaps.bundle
\f0\fs28 \cb3 \'a0file int your Xcode Project Drag the\'a0
\f1\fs24 \cb5 SKAdvisorResources.bundle
\f0\fs28 \cb3 \'a0file int your Xcode Project\cb1 \
\pard\intbl\itap1\pardeftab720\sl400\partightenfactor0

\b\fs32 \cf2 \cb3 The Map\cb1 \
\pard\intbl\itap1\pardeftab720\sl340\partightenfactor0

\b0\fs28 \cf2 \cb3 Let's say you have a UITabBarViewController as your main navigation controller. When you setup your tabs, simply create a new\'a0
\f1\fs24 \cb5 EQMapViewController
\f0\fs28 \cb3 .\cb1 \
\cb3 YourViewController.m\cb1 \
\pard\intbl\itap1\pardeftab720\sl320\partightenfactor0

\f1\fs24 \cf2 \cb5 - (
\f2\b \cf10 \strokec10 void
\f1\b0 \cf2 \strokec2 ) 
\f2\b \cf11 \strokec11 yourMethod
\f1\b0 \cf2 \strokec2  \{\
    ...\
  UITabBarViewController 
\f2\b *
\f1\b0 yourTBController 
\f2\b =
\f1\b0  [[YourTabBarSubClass alloc] init];\
  EQMapViewController 
\f2\b *
\f1\b0 eqMapVC 
\f2\b =
\f1\b0  [[EQMapViewController alloc] init];\
  \cf9 \strokec9 NSArray\cf2 \strokec2  
\f2\b *
\f1\b0  tabViews 
\f2\b =
\f1\b0  [\cf9 \strokec9 NSArray\cf2 \strokec2  arrayWithObjects: yourVC1, your VC2, eqMapVC, \cf9 \strokec9 nil\cf2 \strokec2 ];\
  yourTBController.viewControllers 
\f2\b =
\f1\b0  tabViews;\
\}\
\pard\intbl\itap1\pardeftab720\sl340\partightenfactor0

\f0\fs28 \cf2 \cb3 The EQ Navigation UI will be much the same as the Notification UI. Documentation scheduled to be completed on Jan 15, 2016.\cb1 \
\pard\intbl\itap1\pardeftab720\sl400\partightenfactor0

\b\fs32 \cf2 \cb3 Navigation\cb1 \
\pard\intbl\itap1\pardeftab720\sl340\partightenfactor0

\b0\fs28 \cf2 \cb3 Let's say you have a UITabBarViewController, and its presenting a view which displays a control which the user can tap. This control has "map data" (coordinates, address, POI) for which you want to allow the user to request a route a route and begin navigation. Get a reference to the\'a0
\f1\fs24 \cb5 EQMapViewController
\f0\fs28 \cb3 , or create a new one. Most use cases will be to display the route from the current location to the point of interest. Call\'a0
\f1\fs24 \cb5 displayRouteTo:(NSString *)
\f0\fs28 \cb3 \'a0and present the view. You can optionally call the\'a0
\f1\fs24 \cb5 startNavigation
\f0\fs28 \cb3 \'a0method to begin turn by turn navigation immediately. Continuing the example from\'a0{\field{\*\fldinst{HYPERLINK "https://bitbucket.org/eqios/eventqueuesdk#the-map"}}{\fldrslt \cf7 \strokec7 The Map}}:\cb1 \
\cb3 YourViewController.m\cb1 \
\pard\intbl\itap1\pardeftab720\sl320\partightenfactor0

\f1\fs24 \cf2 \cb5 - (
\f2\b \cf10 \strokec10 void
\f1\b0 \cf2 \strokec2 ) 
\f2\b \cf11 \strokec11 yourMethod
\f1\b0 \cf2 \strokec2  \{\
    ...\
  UITabBarViewController 
\f2\b *
\f1\b0 yourTBController 
\f2\b =
\f1\b0  [[YourTabBarSubClass alloc] init];\
  EQMapViewController 
\f2\b *
\f1\b0 eqMapVC 
\f2\b =
\f1\b0  [[EQMapViewController alloc] init];\
  \cf9 \strokec9 NSArray\cf2 \strokec2  
\f2\b *
\f1\b0  tabViews 
\f2\b =
\f1\b0  [\cf9 \strokec9 NSArray\cf2 \strokec2  arrayWithObjects: yourVC1, your VC2, eqMapVC, \cf9 \strokec9 nil\cf2 \strokec2 ];\
  yourTBController.viewControllers 
\f2\b =
\f1\b0  tabViews;\
    ...\
  [eqMapVC displayRouteTo: \cf13 \strokec13 @"41.864992, -87.616952"\cf2 \strokec2  withMode:\cf13 \strokec13 @"pedestrian"\cf2 \strokec2 ];\
  [eqMapVC startNavigation];\
  [yourTBController setSelectedIndex: \cf15 \strokec15 2\cf2 \strokec2 ];\
    ...\
\}\
\pard\intbl\itap1\pardeftab720\sl340\partightenfactor0

\f0\fs28 \cf2 \cb3 More Examples of displayRouteTo:\cb1 \
\pard\intbl\itap1\pardeftab720\sl320\partightenfactor0

\f1\fs24 \cf2 \cb5 [eqMapVC displayRouteTo: \cf13 \strokec13 @"Buckingham Fountain"\cf2 \strokec2  withMode:\cf13 \strokec13 @"pedestrian"\cf2 \strokec2 ];\
\pard\intbl\itap1\pardeftab720\sl320\partightenfactor0

\f3\i \cf14 \strokec14 //you can use a partial address, however its not recommended
\f1\i0 \cf2 \strokec2 \
[eqMapVC displayRouteTo: \cf13 \strokec13 @"100 S. Michigan Ave, Chicago IL"\cf2 \strokec2 ];  
\f3\i \cf14 \strokec14 //default mode is @"car";
\f1\i0 \cf2 \strokec2 \
[eqMapVC displayRouteTo: \cf13 \strokec13 @"Hospital"\cf2 \strokec2  withMode:\cf13 \strokec13 @"car"\cf2 \strokec2 ];  
\f3\i \cf14 \strokec14 //will route to the nearest hospital
\f1\i0 \cf2 \strokec2 \
\pard\intbl\itap1\pardeftab720\sl440\qr\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://bitbucket.org/eqios/eventqueuesdk/follow"}}{\fldrslt 
\f0\fs28 \cf4 \strokec4 Watch}}
\f0 \cb3 \'a0
\fs28 \cb1 \
\pard\intbl\itap1\pardeftab720\sl400\partightenfactor0

\b\fs32 \cf2 \cb3 Recent activity\'a0\cb1 \cell \lastrow\row
}